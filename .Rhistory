paste(1:3, c("X", "Y", "Z"), sep = "")
paste(lETTERS, 1:4, sep="-")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf - inf
Inf - Inf
swirl()
_vector <- c(1:10)
my_vector <- c(1:10)
print(my_vector)
my_vect <- seq(1,10, by = 0.3)
print(my_vect)
my_vect <- seq(1,10, times = 100)
print(my_vect)
my_vect <- rep(10, times = 100)
print(my_vect)
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x <- x
x[c(3,5,7)]
x
x[0]
x[3,5,7]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- (1:20, nrow = 4, ncol = 5)
my_matrix2 <- ( nrow = 4, ncol = 5)
my_matrix2 <- ( nrow = 4 ncol = 5)
my_matrix2 <- (1:20, 4, 5)
my_matrix2 <- (1, 4, 5)
my_matrix2 <- matrix(1:20, 4, 5)
identical(matrix, matrix2)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
colnames()
sa
?colnames
colnames(my_data) <- cnames
my_data
library(swirl)
rm(list=ls())
swirl()
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & C(TRUE, FALSE, FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE).
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
INTS
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
x
sumbit()
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
my_mean(c(4,5,10))
submit()
submit()
reminder(5)
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram()
submit()
submit()
mad_libs(adjective = "", place = "", noun = "")
submit()
submit()
"'I' %p% 'love' %p% 'R!'"
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
month(d1)
months(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summury(pollution$pm25)
summary(pollution$pm25)
2
ppm
quantile(ppm)
3
boxplot(ppm,col="blue")
1
abline(h = 12)
s
12
hist(ppm, col = "green")
3
rug(ppm)
213
low
qw
2
high
2
hist(ppm, col = "green", breaks = 100)
2
rug(ppm)
2
hist(ppm, col = "green")
2
abline(v = 12, lwd=2)
2
abline(v = median(ppm), col = "magenta", lwd = 4)
2
names(pollution)
2
reg <- table(pollution$region)
reg
2
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
2
boxplot(pm25 ~ region, data = pollution, col = "red")
2
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
22
east <- subset(pollution,region=="east")
head(east)
2
hist(east$pm25, col = "green")
2
hist(subset(pollution,region=="west")$pm25, col = "green")
2
with(pollution, plot(latitude, pm25))
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
2
plot(pollution$latitude, ppm, col = pollution$region)
2
abline(h = 12, lwd = 2, lty = 2)
2
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
2
west <- subset(pollution,region=="west")
2
plot(west$latitude, west$pm25, main = "West")
2
plot(east$latitude, east$pm25, main = "East")
?Devices
2
with(faithful, plot(eruptions, waiting))
2
title(main = "Old Faithful Geyser data")
2
dev.cur()
2
pdf(file="myplot.pdf")
2
with(faithful, plot(eruptions, waiting))with(faithful, plot(eruptions, waiting))
with(faithful, plot(eruptions, waiting))
2
title(main = "Old Faithful Geyser data")
2
dev.cur()
dev.off()
dev.cur()
2
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
2
dev.copy(png, file = "geyserplot.png")
2
dev.off()
2
руфв(сфкі)
head(cars)
2
with(cars, plot(speed, dist))
2
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
2
head(state)
2
table(state$region)
2
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
2
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
2
head(mpg)
2
dim(mpg)
2
table(mpg$model)
2
qplot(displ, hwy, data = mpg)
1
head(airquality)
2
range(airquality$Ozone,na.rm=TRUE)
2
hist(airquality$Ozone)
2
table(airquality$Month)
2
boxplot(Ozone~Month, airquality)
1
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone
| (ppb)",col.axis="blue",col.lab="red")
2
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone
| (ppb)",col.axis="blue",col.lab="red")
2
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
1
title(main="Ozone and Wind in New York City")
22
with(airquality, plot(Wind, Ozone))
2
title(main="Ozone and Wind in New York City")
2
length(par())
2
names(par())
2
par()$pin
3
par()$fg
1
par()$pch
1
par()$lty
1
plot(airquality$Wind, type="n",airquality$Ozone)
2
title(main="Wind and Ozone in NYC")
2
may <- subset(airquality, Month==5)
2
points(may$Wind,may$Ozone,col="blue",pch=17)
2
notmay <- subset(airquality, Month!=5)
2
2
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
2
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
2
abline(v=median(airquality$Wind),lty=2,lwd=2)
2
par(mfrow=c(1,2))
2
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
22
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
2
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
1
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
3
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
2
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
2
mtext("Ozone and Weather in New York City", outer = TRUE)
hhConsump<-read.table("household_power_consumption.txt", sep=";",
header=TRUE, colClasses="character", na.strings="NA")
dtColumn <- paste(hhConsump$Date,hhConsump$Time)
dtColumn <- strptime(dtColumn, "%d/%m/%Y %H:%M:%S")
hhConsump$DateTime<-dtColumn
hhConsump$Date<-as.Date(hhConsump$Date,"%d/%m/%Y")
hhConsump<-hhConsump[hhConsump$Date>="2007-02-01" & hhConsump$Date<="2007-02-02",]
hhConsump$Global_active_power<-as.numeric(hhConsump$Global_active_power)
hhConsump$Global_reactive_power<-as.numeric(hhConsump$Global_reactive_power)
hhConsump$Voltage<-as.numeric(hhConsump$Voltage)
hhConsump$Global_intensity<-as.numeric(hhConsump$Global_intensity)
hhConsump$Sub_metering_1<-as.numeric(hhConsump$Sub_metering_1)
hhConsump$Sub_metering_2<-as.numeric(hhConsump$Sub_metering_2)
hhConsump$Sub_metering_3<-as.numeric(hhConsump$Sub_metering_3)
png(file="plot4.png")
par(mfcol=c(2,2))
# topleft plot
plot(hhConsump$DateTime, hhConsump$Global_active_power,type="l",
xlab="",ylab="Global Active Power")
# bottomleft plot
plot(hhConsump$DateTime,hhConsump$Sub_metering_1,
ylab="Energy sub metering",
xlab="", col="black",
type="l")
points(hhConsump$DateTime,hhConsump$Sub_metering_2,col="red",type="l")
points(hhConsump$DateTime,hhConsump$Sub_metering_3,col="blue",type="l")
legend("topright",lwd=1,col=c("black","red","blue"),
legend=c("Sub_metering_1",
"Sub_metering_2",
"Sub_metering_3"))
# topright plot
plot(hhConsump$DateTime,hhConsump$Voltage, xlab="datetime", ylab="Voltage", type="l")
# bottomright plot
plot(hhConsump$DateTime,hhConsump$Global_reactive_power,
xlab="datetime", ylab = "Global_reactive_power", type="l")
dev.off()
getwd()
setwd("C:/Users/PC/Documents/lab5")
hhConsump<-read.table("household_power_consumption.txt", sep=";",
header=TRUE, colClasses="character", na.strings="NA")
dtColumn <- paste(hhConsump$Date,hhConsump$Time)
dtColumn <- strptime(dtColumn, "%d/%m/%Y %H:%M:%S")
hhConsump$DateTime<-dtColumn
hhConsump$Date<-as.Date(hhConsump$Date,"%d/%m/%Y")
hhConsump<-hhConsump[hhConsump$Date>="2007-02-01" & hhConsump$Date<="2007-02-02",]
hhConsump$Global_active_power<-as.numeric(hhConsump$Global_active_power)
hhConsump$Global_reactive_power<-as.numeric(hhConsump$Global_reactive_power)
hhConsump$Voltage<-as.numeric(hhConsump$Voltage)
hhConsump$Global_intensity<-as.numeric(hhConsump$Global_intensity)
hhConsump$Sub_metering_1<-as.numeric(hhConsump$Sub_metering_1)
hhConsump$Sub_metering_2<-as.numeric(hhConsump$Sub_metering_2)
hhConsump$Sub_metering_3<-as.numeric(hhConsump$Sub_metering_3)
png(file="plot4.png")
par(mfcol=c(2,2))
# topleft plot
plot(hhConsump$DateTime, hhConsump$Global_active_power,type="l",
xlab="",ylab="Global Active Power")
# bottomleft plot
plot(hhConsump$DateTime,hhConsump$Sub_metering_1,
ylab="Energy sub metering",
xlab="", col="black",
type="l")
points(hhConsump$DateTime,hhConsump$Sub_metering_2,col="red",type="l")
points(hhConsump$DateTime,hhConsump$Sub_metering_3,col="blue",type="l")
legend("topright",lwd=1,col=c("black","red","blue"),
legend=c("Sub_metering_1",
"Sub_metering_2",
"Sub_metering_3"))
# topright plot
plot(hhConsump$DateTime,hhConsump$Voltage, xlab="datetime", ylab="Voltage", type="l")
# bottomright plot
plot(hhConsump$DateTime,hhConsump$Global_reactive_power,
xlab="datetime", ylab = "Global_reactive_power", type="l")
dev.off()
library(data.table)
install.packages(data.table)
install.packages("data.table", repos = "https://Rdatatable.github.io/data.table", type = "source")
library(data.table)
install.packages("data.table", repos = "https://Rdatatable.github.io/data.table", type ="source")
installed.packages()
x = data.frame(a = c(10,15,12,13,11), b = c(45, 33, 36, 29, 55))
plot(x$a)
plot(x$a, x$b)
points(x$a, x$b)
points(x$b, x$a)
points(x$b, x$a)
y = data.frame(a = c(13,5,15,11,12), b = c(65, 63, 76, 39, 51))
plot(x$a, x$b)
points(y$a, y$b)
points(y$a, y$b, type="l")
hhConsump<-read.table("household_power_consumption.txt", sep=";",
header=TRUE, colClasses="character", na.strings="NA")
dtColumn <- paste(hhConsump$Date,hhConsump$Time)
dtColumn <- strptime(dtColumn, "%d/%m/%Y %H:%M:%S")
hhConsump$DateTime<-dtColumn
hhConsump$Date<-as.Date(hhConsump$Date,"%d/%m/%Y")
hhConsump<-hhConsump[hhConsump$Date>="2007-02-01" & hhConsump$Date<="2007-02-02",]
hhConsump$Sub_metering_1<-as.numeric(hhConsump$Sub_metering_1)
hhConsump$Sub_metering_2<-as.numeric(hhConsump$Sub_metering_2)
hhConsump$Sub_metering_3<-as.numeric(hhConsump$Sub_metering_3)
png(file="plot3.png")
plot(hhConsump$DateTime,hhConsump$Sub_metering_1,
xlab="", ylab="Energy sub metering", col="black", type="l")
lines(hhConsump$DateTime,hhConsump$Sub_metering_2,col="red")
lines(hhConsump$DateTime,hhConsump$Sub_metering_3,col="blue")
legend("topright",lwd=1,col=c("black","red","blue"),legend=c("Sub_metering_1",
"Sub_metering_2","Sub_metering_3"))
dev.off()
hhConsump<-read.table("household_power_consumption.txt", sep=";",
header=TRUE, colClasses="character", na.strings="NA")
dtColumn <- paste(hhConsump$Date,hhConsump$Time)
dtColumn <- strptime(dtColumn, "%d/%m/%Y %H:%M:%S")
hhConsump$DateTime<-dtColumn
hhConsump$Date<-as.Date(hhConsump$Date,"%d/%m/%Y")
hhConsump<-hhConsump[hhConsump$Date>="2007-02-01" & hhConsump$Date<="2007-02-02",]
hhConsump$Global_active_power<-as.numeric(hhConsump$Global_active_power)
hhConsump$Global_reactive_power<-as.numeric(hhConsump$Global_reactive_power)
hhConsump$Voltage<-as.numeric(hhConsump$Voltage)
hhConsump$Global_intensity<-as.numeric(hhConsump$Global_intensity)
hhConsump$Sub_metering_1<-as.numeric(hhConsump$Sub_metering_1)
hhConsump$Sub_metering_2<-as.numeric(hhConsump$Sub_metering_2)
hhConsump$Sub_metering_3<-as.numeric(hhConsump$Sub_metering_3)
png(file="plot4.png")
par(mfcol=c(2,2))
# topleft plot
plot(hhConsump$DateTime, hhConsump$Global_active_power,type="l",
xlab="",ylab="Global Active Power")
# bottomleft plot
plot(hhConsump$DateTime,hhConsump$Sub_metering_1,
ylab="Energy sub metering",
xlab="", col="black",
type="l")
lines(hhConsump$DateTime,hhConsump$Sub_metering_2,col="red")
lines(hhConsump$DateTime,hhConsump$Sub_metering_3,col="blue")
legend("topright",lwd=1,col=c("black","red","blue"),
legend=c("Sub_metering_1",
"Sub_metering_2",
"Sub_metering_3"))
# topright plot
plot(hhConsump$DateTime,hhConsump$Voltage, xlab="datetime", ylab="Voltage", type="l")
# bottomright plot
plot(hhConsump$DateTime,hhConsump$Global_reactive_power,
xlab="datetime", ylab = "Global_reactive_power", type="l")
dev.off()
